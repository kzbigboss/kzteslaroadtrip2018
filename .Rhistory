raw_teslagps <- raw_tesladata %>%
select(longitude, latitude) %>%
top_n(1)
blah <- find_geo(raw_teslagps)
blah <- find_geo(raw_teslagps)
kable(display_data)
# clear environment
rm(list=ls())
cat("\014")
# load libraries
library(dplyr) #for data manipulation
library(DBI) #for interfacing with a database
library(zoo) #for backfilling NAs along time series
#library(rwunderground) #for downloading weater, deprecated
library(lubridate) #for date/time manupluation
library(jsonlite) #for parsing through JSON
library(knitr)
# set working directory
setwd('/Users/kazzazmk/WorkDocs/Repo/kzteslaroadtrip2018')
# load data
raw_tesladata <- readRDS('data/kztesla.RDS')
# create subset for summary table
summary_tesla <- raw_tesladata %>%
filter(trip_day != 0) %>% # ignoring data outside the bound of our roadtrip
filter(trip_event == 'transit') %>% # ignoring overnight charging sessions
group_by(trip_day) %>%
summarize(od_start = min(odometer)
,od_end = max(odometer)
,time_start = min(timestamp)
,time_end = max(timestamp)
,avg_temp_f = round(mean(outside_temp_f),1)
,miles_traveled = round(od_end - od_start,1)
) %>%
ungroup(.) %>%
select(-od_start, -od_end) %>%
mutate(running_miles = cumsum(miles_traveled)
,time_hrs = round(difftime(time_end, time_start, unit='hours'),1)
,time_hrs = as.numeric(time_hrs)
,run_time = cumsum(time_hrs)
) %>%
select(-time_start, -time_end)
kable(summary_tesla)
# create subset for charging questions
charge_tesla <- raw_tesladata %>%
filter(trip_day != 0) %>% # ignoring data outside the bound of our roadtrip
filter(trip_event == 'transit') %>% # ignoring overnight charging sessions
select(unixtime, timestamp, trip_day, trip_event, battery_level, outside_temp_f, latitude, longitude, contains('charge_state'))
### create subset focused on start/end times
charge_start_end <- charge_tesla %>%
select(unixtime, timestamp, trip_day, trip_event
,battery_level, outside_temp_f, latitude, longitude
,charge_state_charging_state, charge_state_charge_miles_added_rated
,charge_state_charge_miles_added_ideal
) %>%
# find the instance where the charge state changed
mutate(charge_state_charging_state = if_else(charge_state_charging_state == 'Starting'
, 'Charging'
, charge_state_charging_state)
) %>%
mutate(event_time = if_else(charge_state_charging_state == lag(charge_state_charging_state)
, 'SAME'
, 'CHANGE'
)
) %>%
filter(event_time == 'CHANGE') %>% # focus on where changes occured
mutate(next_timestamp = lead(timestamp)) %>% # peek ahead to see when the charge state ended
filter(charge_state_charging_state == 'Charging') %>% # drop records where changing stopped
mutate(duration = as.numeric(next_timestamp - timestamp)) # calculate charge duration
# summare charge data
charge_start_end_summary <- charge_start_end %>%
group_by(trip_day) %>%
summarize(charges = n()
,chrg_time_hrs = round(sum(duration) / 60,1)
) %>%
ungroup(.) %>%
mutate(running_chrg_time_hrs = cumsum(chrg_time_hrs))
kable(charge_start_end_summary)
display_data <- summary_tesla %>%
left_join(charge_start_end_summary)
kable(display_data)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) #%>%
select(trip_day, time_hrs, chrg_time_hrs)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_no_chrg = time_hrs - chrg_time_hrs)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (chargers * 30))
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * 30))
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5))
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = (time_hrs_red_chrg - time_hrs)/time_hrs )
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = round((time_hrs_red_chrg - time_hrs)/time_hrs ),1)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = round((time_hrs_red_chrg - time_hrs)/time_hrs,1))
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = round((time_hrs_red_chrg - time_hrs)/time_hrs,2))
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = round((time_hrs_red_chrg - time_hrs)/time_hrs,2)) %>%
mutate(running_time_hrs = cumsum(time_hrs))
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = round((time_hrs_red_chrg - time_hrs)/time_hrs,2)) %>%
mutate(running_time_hrs = cumsum(time_hrs)
,red_running_time_hrs = cumsum(time_hrs_red_chrg)
)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = round((time_hrs_red_chrg - time_hrs)/time_hrs,2)) %>%
mutate(running_time_hrs = cumsum(time_hrs)
,red_running_time_hrs = cumsum(time_hrs_red_chrg)
,overall_reduction = red_running_time_hrs - running_time_hrs
)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)
,time_hrs_no_chrg = time_hrs - chrg_time_hrs
) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(time_reduced_pct = round((time_hrs_red_chrg - time_hrs)/time_hrs,2)) %>%
mutate(running_time_hrs = cumsum(time_hrs)
,red_running_time_hrs = cumsum(time_hrs_red_chrg)
,overall_reduction_hrs = red_running_time_hrs - running_time_hrs
)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)
,time_hrs_no_chrg = time_hrs - chrg_time_hrs
) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(running_time_hrs = cumsum(time_hrs)
,red_running_time_hrs = cumsum(time_hrs_red_chrg)
,overall_reduction_hrs = red_running_time_hrs - running_time_hrs
)
kable(reduced_stops)
reduced_stops <- summary_tesla %>%
left_join(charge_start_end_summary) %>%
select(trip_day, time_hrs, chrg_time_hrs, charges) %>%
mutate(time_hrs_red_chrg = time_hrs - chrg_time_hrs + (charges * .5)
,time_hrs_no_chrg = time_hrs - chrg_time_hrs
) %>%
select(-chrg_time_hrs, -charges) %>%
mutate(running_time_hrs = cumsum(time_hrs)
,running_time_red_hrs = cumsum(time_hrs_red_chrg)
,running_time_no_hrs = cumsum(time_hrs_no_chrg)
)
kable(reduced_stops)
kable(reduced_stops %>% select(trip_day, time_hrs, time_hrs_red_chrg, time_hrs_no_chrg))
kable(reduced_stops %>% select(trip_day, time_hrs, time_hrs_red_chrg, time_hrs_no_chrg))
kable(reduced_stops %>% select(trip_day, running_time_hrs, running_time_red_hrs, running_time_no_hrs))
regen_braking <- raw_tesladata %>%
filter(trip_day > 2) %>%
distinct(trip_day)
regen_braking
regen_braking <- raw_tesladata %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40
)
View(regen_braking)
regen_braking <- raw_tesladata %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(energy_state = if_else(speed > 0, 'CONSUME','REGEN'))
View(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(energy_state = if_else(speed > 0, 'CONSUME','REGEN') # label consumption v regeneration
)
View(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(energy_state = if_else(speed > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(drive_state_power)
)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(energy_state = if_else(speed > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(energy_state = if_else(speed > 0, 'CONSUME','REGEN') # label consumption v regeneration
,power = as.numeric(drive_state_power)
)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(energy_state = if_else(speed > 0, 'CONSUME','REGEN') # label consumption v regeneration
,power = as.numeric(drive_state_power)
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(speed > 0, 'CONSUME','REGEN') # label consumption v regeneration
)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
spread(trip_day, energy_state)
kable(regen_braking)
library(tidyr) #for reshaping
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
spread(trip_day, energy_state)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
spread(count, awg_wh)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
spread(count, avg_wh)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
spread(trip_day)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
spread(trip_day, count)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
gather(trip_day, count)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
gather(trip_day, energy_state)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
) %>%
gather(trip_day, energy_state) %>%
spread(trip_day)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = mean(power)
)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = round(mean(power),1)
)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = round(mean(power),1)
)
kable(regen_braking)
regen_braking <- raw_tesladata %>%
select(timestamp, trip_day, trip_event, speed, drive_state_power) %>%
filter(trip_day > 2 # focus on trip days 3-5
,trip_event == 'transit' # focus on when the car is in transit
,speed > 40 # focus on records when the car was faster than 40MPH
) %>%
mutate(power = as.numeric(drive_state_power) # reset data type
,energy_state = if_else(power > 0, 'CONSUME','REGEN') # label consumption v regeneration
) %>%
group_by(trip_day, energy_state) %>%
summarise(count = n()
,avg_wh = round(mean(power),1)
) %>%
mutate(impact = count * avg_wh)
kable(regen_braking)
